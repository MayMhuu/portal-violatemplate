{"version":3,"sources":["views/author-list/AuthorList.js","components/skeleton/SkeletonComponent.js","utils/common.js","constants/apiEndpoints.js","components/formSearch/FormSearch.js","utils/stringFormatter.js","components/table/PageSizeSelect.js","components/table/DataTable.js","../node_modules/react-semantic-ui-datepickers/dist/locales sync /^/.*/.json$"],"names":["headerData","key","label","AuthorList","toast","useContext","ToastContext","history","useHistory","dispatch","useDispatch","urlParams","URLSearchParams","location","search","urlPage","parseInt","get","urlItemsPerPage","useState","hitsPerPage","page","query","stateData","setStateData","error","useSelector","dataList","data","hits","nbPages","loading","nbHits","system","useEffect","addToast","fetchDataList","url","ApiEndPoints","authorList","body","attributes","type","name","handleChangeLimit","val","a","fetchDataPerPage","activePage","itemsPage","onSearchHandle","value","currentPage","onRefreshHandle","setLoading","isLoading","onSearchAction","onRefreshAction","column","count","attributesCount","length","columnData","attributesCols","className","listData","columns","itemsPerPage","totalCount","onChangeLimit","sizeSelected","searchKey","selectedPerPage","SkeletonComponent","size","renderRows","rows","index","push","style","marginTop","height","width","borderRadius","process","FormSearch","searchValue","setSearchValue","handleChange","event","target","handleChangeDate","handleSelect","result","container","doubling","stackable","map","item","Column","Dropdown","placeholder","fluid","multiple","multi","selection","options","option","onChange","id","format","formatOptions","Input","range","background","color","icon","content","onClick","e","preventDefault","variableNameToWords","str","replace","charAt","toUpperCase","slice","limitOptions","text","PageSizeSelect","limit","Fragment","inline","DataTable","renderBodyRow","actionList","setSelection","modal","setModal","sortCol","sortDirection","direction","totalPages","Math","ceil","setColumn","fields","childFields","encodeURI","forEach","columnName","includes","simple","Icon","link","Modal","open","padding","fontSize","Menu","filter","Item","Checkbox","defaultChecked","Button","variant","shape","backgroundColor","floated","confirmSelectColumn","colSpan","rowSpan","childHeader","checked","el","filterCol","x","defaultRenderHeaderRow","Table","Row","col","HeaderCell","sorted","changeSort","renderRow","rowIndex","Cell","Group","basic","btn","Popup","trigger","action","href","reportUrl","download","checkDate","moment","ISO_8601","isValid","Date","Segment","hidden","celled","unstackable","headerRow","tableData","Pagination","onPageChange","skip","handleActivePageChange","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/8.188b92b8.chunk.js","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchDataList } from \"../../features/dataList/dataListApi\";\r\nimport { dataList } from \"../../features/dataList/dataListSlice\";\r\nimport { system } from \"../../features/system/systemSlice\";\r\nimport { ApiEndPoints } from \"../../constants/apiEndpoints\";\r\nimport FormSearch from \"../../components/formSearch/FormSearch\";\r\nimport DataTable from \"../../components/table/DataTable\";\r\nimport { ToastContext } from \"../../context/toastContext\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport SkeletonComponent from \"../../components/skeleton/SkeletonComponent\";\r\nimport { isLoading } from \"../../utils/common\";\r\nimport { attributesCount, attributesCols } from \"../../utils/common\";\r\n\r\nconst headerData = [\r\n  { key: \"index\", label: \"No.\" },\r\n  { key: \"created_at_i\", label: \"Id\" },\r\n  { key: \"title\", label: \"Title\" },\r\n  { key: \"author\", label: \"Author\" },\r\n  { key: \"points\", label: \"Points\" },\r\n  { key: \"num_comments\", label: \"Num Comments\" },\r\n  { key: \"story_title\", label: \"Story Title\" },\r\n  { key: \"created_at\", label: \"Created At\" },\r\n];\r\nconst AuthorList = () => {\r\n  const toast = useContext(ToastContext);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const urlParams = new URLSearchParams(history.location.search);\r\n  const urlPage = parseInt(urlParams.get(\"page\"), 10) || 1;\r\n  const urlItemsPerPage = parseInt(urlParams.get(\"itemsPerPage\"), 10) || 5;\r\n\r\n  const [stateData, setStateData] = useState({\r\n    hitsPerPage: urlItemsPerPage,\r\n    page: urlPage,\r\n    query: \"redux\",\r\n  });\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const { error } = useSelector(dataList);\r\n  const { data } = useSelector(dataList).dataList || [];\r\n  const { hits, nbPages, nbHits } = data || {};\r\n  const { loading } = useSelector(system);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.addToast(\"ERROR\", error, \"error\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      fetchDataList({\r\n        url: ApiEndPoints.authorList,\r\n        body: {\r\n          page: stateData.hitsPerPage * (stateData.page - 1),\r\n          hitsPerPage: stateData.hitsPerPage,\r\n          query: stateData.query,\r\n        },\r\n      })\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [stateData]);\r\n\r\n  const attributes = [\r\n    { type: \"text\", name: \"query\", label: \"Search ---\" }\r\n  ];\r\n\r\n  const handleChangeLimit = async (val) => {\r\n    setStateData({ ...stateData, hitsPerPage: val, page: 1 });\r\n  };\r\n\r\n  const fetchDataPerPage = async (activePage, itemsPage, body) => {\r\n    setStateData({\r\n      hitsPerPage: itemsPage,\r\n      page: activePage,\r\n      query: body.search,\r\n    });\r\n  };\r\n\r\n  const onSearchHandle = async (value) => {\r\n    setStateData({ ...stateData, currentPage: 1, query: value[\"query\"] });\r\n  };\r\n\r\n  const onRefreshHandle = async (key) => {\r\n    setStateData({\r\n      ...stateData,\r\n      currentPage: 1,\r\n      query: \"redux\",\r\n    });\r\n  };\r\n\r\n  const setLoading = isLoading(data) ? false : true;\r\n\r\n  const onDownloadAction = (bodyData) => {\r\n    setModal(false);\r\n    console.log(\"bodyDataXXXXXXXXx\",bodyData)\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      label: 'Download',\r\n      value: 'download',\r\n      color: 'info',\r\n      action: onDownloadAction,\r\n    },\r\n  ];\r\n\r\n  const downloadAtt = [\r\n    { type: \"text\", name: \"query\", label: \"Search ---\" },\r\n    { type: \"text\", name: \"test\", label: \"\" },\r\n    {\r\n      type: \"select\",\r\n      name: \"select\",\r\n      option: [{ label: \"A\", name: \"a\" }],\r\n    },\r\n    { type: \"radio\", name: \"gender\", label: \"Gender\" },\r\n    // { type: \"text\", name: \"tesasdasdasdt\", label: \"\" },\r\n  ];\r\n   const exportAttributes = [\r\n    { key: \"csv\", label: \"CSV\" , type: 'radio',defaultValue:true},\r\n    { key: \"xlxs\", label: \"XLXS\", type: 'radio' },\r\n    { type: \"text\", name: \"input\", label: \"Input ---\" },\r\n    { key: \"index\", label: \"Select All\" , type: 'checkbox',selectAll:true},\r\n    { key: \"transRefId\", label: \"Transaction RefId\" , type: 'checkbox'},\r\n    { key: \"code\", label: \"Transaction Code\", type: 'checkbox' },\r\n    { key: \"updatedAt\", label: \"Finished at\", type: 'checkbox' },\r\n    { key: \"status\", label: \"Status\", type: 'card' },\r\n    { key: \"processedBy\", label: \"Process By\" , type: 'card'},\r\n    { key: \"senderName\", label: \"Sender\", type: 'card' },\r\n    { key: \"merchant\", label: \"Merchant\" , type: 'card'},\r\n    { key: \"free\", label: \"\" , type: 'input', className: 'hidden-inp'},\r\n   \r\n  ];\r\n  return (\r\n    <>\r\n      {data && setLoading ? (\r\n        <Segment>\r\n          <FormSearch\r\n            onSearchAction={onSearchHandle}\r\n            onRefreshAction={onRefreshHandle}\r\n            attributes={attributes}\r\n            column={3}\r\n          />\r\n        </Segment>\r\n      ) : (\r\n        <SkeletonComponent\r\n          count={attributesCount(attributes.length)}\r\n          columnData={attributesCols(attributes.length)}\r\n          className=\"skeleton-wrapper\"\r\n        />\r\n      )}\r\n      {data && !loading ? (\r\n        <DataTable\r\n          listData={hits}\r\n          isLoading={loading}\r\n          currentPage={stateData.page}\r\n          columns={headerData}\r\n          itemsPerPage={stateData.hitsPerPage}\r\n          totalCount={nbPages}\r\n          fetchDataPerPage={fetchDataPerPage}\r\n          onChangeLimit={handleChangeLimit}\r\n          sizeSelected={false}\r\n          searchKey={stateData.query}\r\n        />\r\n      ) : (\r\n        <SkeletonComponent\r\n          count={stateData.hitsPerPage}\r\n          columnData={headerData.length}\r\n          selectedPerPage\r\n          className=\"skeleton-wrapper\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthorList;\r\n","import React from 'react';\r\nimport { Segment, Table } from 'semantic-ui-react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\n\r\nconst SkeletonComponent = ({\r\n  className,\r\n  count,\r\n  columnData,\r\n  selectedPerPage,\r\n  size,\r\n}) => {\r\n  const renderRows = () => {\r\n    const rows = [];\r\n    for (let index = 0; index < columnData; index++) {\r\n      rows.push(\r\n        <td key={index}>\r\n          <Skeleton\r\n            count={count}\r\n            style={{ marginTop: '25px' }}\r\n            height={size ? size : 35}\r\n          />\r\n        </td>,\r\n      );\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedPerPage ? (\r\n        <Segment className={className}>\r\n          <Skeleton width={350} height={20} borderRadius={30} />\r\n          <Table>{renderRows()}</Table>\r\n          <Skeleton width={600} height={40} borderRadius={10} />\r\n        </Segment>\r\n      ) : (\r\n        <Segment className={className}>\r\n          <Table>{renderRows()}</Table>\r\n        </Segment>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SkeletonComponent;\r\n","import { Label, Icon } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\n\r\nexport const getStatusColor = (status) => {\r\n  switch (status) {\r\n    case 'success':\r\n    case 'done':\r\n    case 'linked':\r\n    case 'active':\r\n      return (\r\n        <Label color=\"green\" horizontal>\r\n          {status}\r\n        </Label>\r\n      );\r\n    case 'failed':\r\n    case 'deleted':\r\n    case 'expired':\r\n      return (\r\n        <Label color=\"red\" horizontal>\r\n          {status}\r\n        </Label>\r\n      );\r\n    case 'pending':\r\n    case 'init':\r\n      return (\r\n        <Label color=\"orange\" horizontal>\r\n          {status}\r\n        </Label>\r\n      );\r\n    case 'resend':\r\n    case 'disputed':\r\n    case 'reversed':\r\n      return (\r\n        <Label color=\"yellow\" horizontal>\r\n          {status}\r\n        </Label>\r\n      );\r\n    case 'send':\r\n    case 'inProgress':\r\n      return (\r\n        <Label color=\"teal\" horizontal>\r\n          {status}\r\n        </Label>\r\n      );\r\n    default:\r\n      return (\r\n        <Label color=\"grey\" horizontal>\r\n          {status}\r\n        </Label>\r\n      );\r\n  }\r\n};\r\n\r\nexport const getCheckImage = (renew) => {\r\n  if (renew) {\r\n    return <Icon name=\"check circle outline\" color=\"green\" />;\r\n  } else {\r\n    return <Icon name=\"times circle outline\" color=\"red\" />;\r\n  }\r\n};\r\n\r\nexport const checkDateFormat = (date) => {\r\n  let checkDate = moment(date, moment.ISO_8601, true).isValid();\r\n  return checkDate;\r\n};\r\n\r\nexport const isLoading = (data) => (data ? false : true);\r\n\r\nexport const attributesCount = (count) =>\r\n  count > 4 && count < 8 ? 2 : count > 8 ? 3 : 1;\r\n\r\nexport const attributesCols = (columnData) => (columnData > 4 ? 4 : columnData);\r\n","export const ApiEndPoints = {\r\n    authorList:\r\n    process.env.REACT_APP_API_SERVER + '/api/v1/search',\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Container, Segment, Grid } from \"semantic-ui-react\";\r\nimport \"./formSearch.scss\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\n\r\nconst FormSearch = ({\r\n  onSearchAction,\r\n  onRefreshAction,\r\n  attributes,\r\n  column,\r\n}) => {\r\n  const [searchValue, setSearchValue] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target) {\r\n      setSearchValue({\r\n        ...searchValue,\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangeDate = (event, { name, value }) => {\r\n    setSearchValue({\r\n      ...searchValue,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event, result) => {\r\n    const { name, value } = result || event.target;\r\n    if (event.target) {\r\n      setSearchValue({ ...searchValue, [name]: value });\r\n    }\r\n  };\r\n\r\n  const onSearch = (e) => {\r\n    e.preventDefault();\r\n    let value = { ...searchValue };\r\n    onSearchAction(value);\r\n  };\r\n\r\n  const onRefreshSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSearchValue({});\r\n    onRefreshAction({});\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Grid columns={column} container doubling stackable>\r\n        {attributes.map((item, index) => {\r\n          if (item.type === \"select\") {\r\n            return (\r\n              <Grid.Column>\r\n                <Form.Dropdown\r\n                  key={index}\r\n                  search={true}\r\n                  placeholder={item.label}\r\n                  fluid\r\n                  name={item.name}\r\n                  multiple={item.multi || false}\r\n                  selection\r\n                  options={item.option}\r\n                  onChange={handleSelect}\r\n                  value={\r\n                    item.multi\r\n                      ? searchValue[item.name] || []\r\n                      : searchValue[item.name] || \"\"\r\n                  }\r\n                />\r\n              </Grid.Column>\r\n            );\r\n          } else if (item.type === \"date\") {\r\n            return (\r\n              <SemanticDatepicker\r\n                key={index}\r\n                className=\"three wide\"\r\n                id={item.name}\r\n                name={item.name}\r\n                placeholder={item.label}\r\n                format=\"YYYY-MM-DD\"\r\n                formatOptions={\"YYYY-MM-DD\"}\r\n                onChange={handleChangeDate}\r\n                value={searchValue[item.name] || \"\"}\r\n                type=\"range\"\r\n              />\r\n            );\r\n          }\r\n          return (\r\n            <Grid.Column>\r\n              <Form.Input\r\n                fluid\r\n                range=\"true\"\r\n                //  width={3}\r\n                placeholder={item.label}\r\n                name={item.name}\r\n                type={item.type}\r\n                key={index}\r\n                value={searchValue[item.name] || \"\"}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid.Column>\r\n          );\r\n        })}\r\n        <Grid.Column>\r\n          <Button\r\n            className=\"btn_search\"\r\n            size=\"small\"\r\n            type=\"submit\"\r\n            style={{ background: \"#0d787a\", color: \"white\" }}\r\n            icon=\"search\"\r\n            content=\"Search\"\r\n            onClick={onSearch}\r\n          ></Button>\r\n\r\n          <Button\r\n            className=\"btn_search\"\r\n            size=\"small\"\r\n            type=\"submit\"\r\n            icon=\"refresh\"\r\n            // labelPosition=\"left\"\r\n            content=\"Refresh\"\r\n            onClick={onRefreshSubmit}\r\n          ></Button>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormSearch;\r\n","export function upperFirstLatterOfEachWord(str, splitter = ' ') {\r\n  if (!str) return '';\r\n  const words = str.split(splitter);\r\n\r\n  words.forEach((word, i) => {\r\n    words[i] = word[0].toUpperCase() + word.substring(1);\r\n  });\r\n\r\n  return words.join(' ');\r\n}\r\n\r\nexport function isUpperCase(str) {\r\n  return str === str.toUpperCase();\r\n}\r\n\r\nexport function variableNameToWords(str) {\r\n  var result = str.replace(/([A-Z])/g, ' $1');\r\n  return result.charAt(0).toUpperCase() + result.slice(1);\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nconst limitOptions = [\r\n  { key: \"0\", value: 5, text: \"5\" },\r\n  { key: \"1\", value: 10, text: \"10\" }\r\n];\r\n\r\nconst PageSizeSelect = ({\r\n  limit,\r\n  onChangeLimit,\r\n}) => {\r\n\r\n  const handleChangeLimit = (\r\n    event, { value }\r\n  ) => {\r\n    onChangeLimit(value);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      Selected per page : {' '}\r\n      <Dropdown\r\n        inline={false}\r\n        options={limitOptions}\r\n     //   defaultValue={limit.toString()}\r\n        value={limit}\r\n        onChange={handleChangeLimit}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PageSizeSelect\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Table,\r\n  Pagination,\r\n  Button,\r\n  Dropdown,\r\n  Checkbox,\r\n  Segment,\r\n  Icon,\r\n  Popup,\r\n  Modal,\r\n} from 'semantic-ui-react';\r\nimport { variableNameToWords } from '../../utils/stringFormatter';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './Table.scss';\r\nimport PageSizeSelect from './PageSizeSelect';\r\nimport { changeSort } from '../../features/dataList/dataListSlice';\r\nimport moment from 'moment';\r\nimport SkeletonComponent from '../skeleton/SkeletonComponent';\r\n\r\nconst DataTable = ({\r\n  listData,\r\n  columns,\r\n  onChangeLimit,\r\n  isLoading,\r\n  searchKey,\r\n  fetchDataPerPage,\r\n  renderBodyRow,\r\n  actionList,\r\n  key,\r\n  totalCount,\r\n  sizeSelected,\r\n  itemsPerPage,\r\n  currentPage,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const data = columns.map((data) => data.key);\r\n  const [selection, setSelection] = useState(data);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  let sortCol = useSelector(({ dataList }) => dataList.column || null);\r\n  let sortDirection = useSelector(\r\n    ({ dataList }) => dataList.direction || null,\r\n  );\r\n  const totalPages = totalCount && Math.ceil(totalCount / itemsPerPage);\r\n\r\n  const [columnData, setColumn] = useState(columns);\r\n  const fields = [];\r\n  const childFields = [];\r\n\r\n  useEffect(() => {\r\n    if (currentPage && itemsPerPage) {\r\n\r\n      history.push(\r\n        encodeURI(\r\n          `?page=${currentPage}&itemsPerPage=${itemsPerPage}&search?query=${searchKey}`,\r\n        ),\r\n      );\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage, itemsPerPage, searchKey]);\r\n\r\n  if (columnData.length > 0) {\r\n    columnData.forEach((columnName) => {\r\n      if (columnName.key && columnName.key.includes('hidden')) {\r\n        fields.push({\r\n          key: columnName.key,\r\n          label:\r\n            columnName.key === 'actions' ? (\r\n              <Dropdown\r\n                item\r\n                simple\r\n                icon={\r\n                  <Icon name=\"columns\" link onClick={() => setModal(!modal)} />\r\n                }\r\n              >\r\n                <Modal\r\n                  open={modal}\r\n                  size=\"mini\"\r\n                  style={{ padding: '15px', fontSize: '3rem' }}\r\n                >\r\n                  <Dropdown.Menu>\r\n                    {columns\r\n                      .filter(\r\n                        (item) =>\r\n                          item.key !== 'index' && item.key !== 'actions',\r\n                      )\r\n                      .map(({ key, label }) => {\r\n                        return (\r\n                          <Dropdown.Item key={key}>\r\n                            <Checkbox\r\n                              size=\"small\"\r\n                              label={variableNameToWords(label)}\r\n                              value={key}\r\n                              defaultChecked={\r\n                                selection.includes(key) ? true : false\r\n                              }\r\n                              onChange={(e, data) => handleChange(e, data)}\r\n                            />\r\n                          </Dropdown.Item>\r\n                        );\r\n                      })}\r\n                    <Dropdown.Item>\r\n                      <Button\r\n                        content={'Confirm'}\r\n                        variant=\"outline\"\r\n                        shape=\"square\"\r\n                        size=\"medium\"\r\n                        style={{ backgroundColor: '#0d787a', color: 'white' }}\r\n                        floated=\"right\"\r\n                        onClick={(event) => {\r\n                          confirmSelectColumn(event);\r\n                        }}\r\n                      />\r\n                      <Button\r\n                        content={'Cancel'}\r\n                        variant=\"outline\"\r\n                        shape=\"square\"\r\n                        size=\"medium\"\r\n                        floated=\"right\"\r\n                        onClick={() => {\r\n                          setModal(!modal);\r\n                        }}\r\n                      />\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Modal>\r\n              </Dropdown>\r\n            ) : (\r\n              variableNameToWords(columnName.label)\r\n            ),\r\n          colSpan: columnName.colSpan,\r\n          rowSpan: columnName.rowSpan,\r\n        });\r\n        if (columnName.childHeader && columnName.childHeader.length > 0) {\r\n          childFields.push(...columnName.childHeader);\r\n        }\r\n      } else {\r\n        fields.push({\r\n          key: columnName.key,\r\n          label: columnName.label,\r\n          colSpan: columnName.colSpan ? columnName.colSpan : 0,\r\n          rowSpan: columnName.rowSpan ? columnName.rowSpan : 0,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleChange = (e, { value, label, checked }) => {\r\n    if (checked) {\r\n      setSelection([...selection, value]);\r\n    } else {\r\n      setSelection(selection.filter((el) => el !== value));\r\n    }\r\n  };\r\n\r\n  const confirmSelectColumn = (event) => {\r\n    const filterCol = columns.filter((x) => selection.includes(x.key));\r\n    if (filterCol.length > 0) {\r\n      setColumn(filterCol);\r\n      setModal(!modal);\r\n    }\r\n  };\r\n\r\n  const handleActivePageChange = (event, data) => {\r\n    const body = {\r\n      skip: itemsPerPage * (data.activePage - 1),\r\n      limit: itemsPerPage,\r\n      search: searchKey,\r\n    };\r\n    fetchDataPerPage(data.activePage, itemsPerPage, body);\r\n  };\r\n\r\n  const onChange = (col) => {\r\n    dispatch(changeSort(col.key));\r\n  };\r\n\r\n  const defaultRenderHeaderRow = () => {\r\n    return (\r\n      <>\r\n        <Table.Row key={1}>\r\n          {fields.map((col, index) => (\r\n            <Table.HeaderCell\r\n              key={index}\r\n              colSpan={col.colSpan}\r\n              rowSpan={col.rowSpan}\r\n              sorted={sortCol === col.label ? sortDirection : null}\r\n              onClick={() => onChange(col)}\r\n            >\r\n              {col.label}\r\n            </Table.HeaderCell>\r\n          ))}\r\n        </Table.Row>\r\n        <Table.Row key={2}>\r\n          {childFields.map((item, index) => (\r\n            <Table.HeaderCell key={index}>{item.label}</Table.HeaderCell>\r\n          ))}\r\n        </Table.Row>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const defaultRenderBodyRow = (data, rowIndex) => {\r\n    return fields.map(({ key }, index) => {\r\n      if (key === 'index') {\r\n        return (\r\n          <Table.Cell key={index}>\r\n            {' '}\r\n            {itemsPerPage && currentPage\r\n              ? rowIndex + 1 + itemsPerPage * (currentPage - 1)\r\n              : rowIndex + 1}\r\n          </Table.Cell>\r\n        );\r\n      } else if (key === 'actions') {\r\n        return (\r\n          <Table.Cell key={index}>\r\n            <Button.Group basic size=\"small\" className=\"btn_gp\">\r\n              {actionList &&\r\n                actionList\r\n                  .filter((a) => a.name !== 'export')\r\n                  .map((btn, index) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          icon\r\n                          key={index}\r\n                          onClick={() => btn.action(data)}\r\n                        >\r\n                          <Icon name={btn.icon} />\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      {btn.label}\r\n                    </Popup>\r\n                  ))}\r\n              {actionList &&\r\n                actionList\r\n                  .filter((a) => a.name === 'export')\r\n                  .map((btn, index) => (\r\n                    <Popup\r\n                      trigger={\r\n                        <Button icon key={index}>\r\n                          <a href={data.reportUrl} download>\r\n                            <Icon name={btn.icon} />\r\n                          </a>\r\n                        </Button>\r\n                      }\r\n                    >\r\n                      {btn.label}\r\n                    </Popup>\r\n                  ))}\r\n            </Button.Group>\r\n          </Table.Cell>\r\n        );\r\n      } else {\r\n        let checkDate = moment(data[key], moment.ISO_8601, true).isValid();\r\n\r\n        return (\r\n          <Table.Cell key={index}>\r\n            {checkDate\r\n              ? moment(new Date(data[key])).format('YYYY-MM-DD HH:mm')\r\n              : data[key]}\r\n          </Table.Cell>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const renderRow = renderBodyRow || defaultRenderBodyRow;\r\n\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <Segment>\r\n          <div className=\"select-text\" hidden={sizeSelected}>\r\n            <PageSizeSelect\r\n              limit={itemsPerPage}\r\n              onChangeLimit={onChangeLimit}\r\n            />\r\n            Total count: {totalCount || 0}\r\n          </div>\r\n          {listData && listData ? (\r\n            <div className=\"scroll-table\">\r\n              <Table\r\n                key={key}\r\n                celled\r\n                unstackable\r\n                headerRow={defaultRenderHeaderRow}\r\n                renderBodyRow={renderRow}\r\n                tableData={listData}\r\n              />\r\n              <Pagination\r\n                key={key}\r\n                totalPages={totalPages}\r\n                activePage={currentPage}\r\n                onPageChange={(event, data) =>\r\n                  handleActivePageChange(event, data)\r\n                }\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"scroll-table\">\r\n              <Table\r\n                key={key}\r\n                celled\r\n                unstackable\r\n                headerRow={defaultRenderHeaderRow}\r\n              />\r\n            </div>\r\n          )}\r\n        </Segment>\r\n      ) : (\r\n        <SkeletonComponent\r\n          count={itemsPerPage}\r\n          columnData={columns}\r\n          selectedPerPage\r\n          className=\"skeleton-wrapper\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  listData: PropTypes.arrayOf(PropTypes.object),\r\n  renderBodyRow: PropTypes.func,\r\n  fetchDataPerPage: PropTypes.func,\r\n};\r\n\r\nexport default DataTable;\r\n","var map = {\n\t\"./bg-BG.json\": 545,\n\t\"./ca-ES.json\": 546,\n\t\"./cs-CZ.json\": 547,\n\t\"./de-DE.json\": 548,\n\t\"./el-GR.json\": 549,\n\t\"./en-US.json\": 468,\n\t\"./es-ES.json\": 550,\n\t\"./et-EE.json\": 551,\n\t\"./fi-FI.json\": 552,\n\t\"./fr-FR.json\": 553,\n\t\"./he-IL.json\": 554,\n\t\"./it-IT.json\": 555,\n\t\"./ja-JP.json\": 556,\n\t\"./ko-KR.json\": 557,\n\t\"./nb-NO.json\": 558,\n\t\"./nn-NO.json\": 559,\n\t\"./pl-PL.json\": 560,\n\t\"./pt-BR.json\": 561,\n\t\"./ro-RO.json\": 562,\n\t\"./ru-RU.json\": 563,\n\t\"./sk-SK.json\": 564,\n\t\"./sv-SE.json\": 565,\n\t\"./tr-TR.json\": 566,\n\t\"./zh-CN.json\": 567\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 544;"],"sourceRoot":""}