{"version":3,"sources":["context/authContext.js","features/dataList/dataListApi.js","features/dataList/dataListSlice.js","components/Toaster.js","context/toastContext.js","assets/images/spinner.gif","views/pages/page404/Page404.js","context/fetchContext.js","App.js","serviceWorker.js","reportWebVitals.js","features/rootReducer.js","features/index.js","index.js","features/system/systemSlice.js"],"names":["AuthContext","createContext","Provider","TOKEN","REFRESH_TOKEN","AUTH_INFO","AuthProvider","children","history","useHistory","useState","authState","setAuthState","useEffect","refreshToken","localStorage","getItem","token","auth","JSON","parse","logout","removeItem","push","setAuthInfo","setItem","stringify","value","isAuthenticated","isExpired","expiredAt","Date","getTime","authInfo","fetchDataList","createAsyncThunk","a","url","body","fulfillWithValue","rejectWithValue","dispatch","loadingAction","axios","get","params","response","console","log","dataListSlice","createSlice","name","initialState","status","dataList","error","column","direction","reducers","changeSort","state","action","payload","Object","assign","data","hits","slice","reverse","_","sortBy","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","Toaster","title","type","show","color","setTimeout","toast","icon","size","description","time","onDismiss","position","ToastContext","ToastProvider","setToast","addToast","message","Grid","Row","Column","sm","lg","Page404","className","md","routWithFetchProvider","withRouter","authContext","useContext","api","create","baseURL","process","interceptors","request","use","config","headers","Authorization","Promise","reject","code","authFetch","loading","class","src","Spinner","TheLayout","React","lazy","Login","AppRoutes","Suspense","fallback","exact","path","to","render","props","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","system","systemSlice","dotenv","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","smallMenu","activeMenu","removeName","selectedMenu","menuList","tabs","pathname","toggleMenu","addToTab","find","tab","updatedTabs","map","remainTabs","filter","t","removeTab","length","clearTab","activateMenu"],"mappings":"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","file":"static/js/main.46e5150d.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\nconst { Provider } = AuthContext;\r\n\r\nconst TOKEN = 'token';\r\nconst REFRESH_TOKEN = 'refreshToken';\r\nconst AUTH_INFO = 'auth';\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const history = useHistory();\r\n  const [authState, setAuthState] = useState({});\r\n\r\n  useEffect(() => {\r\n \r\n    const refreshToken = localStorage.getItem(REFRESH_TOKEN);\r\n    const token = localStorage.getItem(TOKEN);\r\n    const auth = localStorage.getItem(AUTH_INFO);\r\n\r\n    setAuthState({\r\n      token: token ? JSON.parse(token) : {},\r\n      refreshToken: refreshToken ? JSON.parse(refreshToken) : {},\r\n      auth: auth ? JSON.parse(auth) : {},\r\n    });\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(REFRESH_TOKEN);\r\n    localStorage.removeItem(TOKEN);\r\n    localStorage.removeItem(AUTH_INFO);\r\n    setAuthState({});\r\n    history.push('/auth/login');\r\n  };\r\n\r\n  const setAuthInfo = ({ auth, token, refreshToken }) => {\r\n    localStorage.setItem(AUTH_INFO, JSON.stringify(auth));\r\n    localStorage.setItem(TOKEN, JSON.stringify(token));\r\n    localStorage.setItem(REFRESH_TOKEN, JSON.stringify(refreshToken));\r\n\r\n    setAuthState({\r\n      token,\r\n      refreshToken\r\n    });\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    return true;\r\n  };\r\n\r\n  const isExpired = () => {\r\n    if (\r\n      authState.token &&\r\n      authState.token.token &&\r\n      authState.token.expiredAt &&\r\n      new Date().getTime() > new Date(authState.token.expiredAt).getTime()\r\n    ) {\r\n      logout();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        logout,\r\n        authState,\r\n        isAuthenticated,\r\n        isExpired,\r\n        setAuthState: (authInfo) => setAuthInfo(authInfo),\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport { AuthProvider, AuthContext };\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { loadingAction } from \"../system/systemSlice\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchDataList = createAsyncThunk(\r\n  \"fetchDataList\",\r\n  async ({ url, body }, { fulfillWithValue, rejectWithValue, dispatch }) => {\r\n    try {\r\n      dispatch(loadingAction(true));\r\n      const response = await axios.get(url, { params: body });\r\n      console.log(\"hitsXXXXXX\", response);\r\n      dispatch(loadingAction(false));\r\n      return fulfillWithValue(response);\r\n    } catch (err) {\r\n      dispatch(loadingAction(false));\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchDataList } from \"./dataListApi\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  status: \"pending\",\r\n  dataList: [],\r\n  error: null,\r\n  column: null,\r\n  direction: null,\r\n};\r\n\r\nconst dataListSlice = createSlice({\r\n  name: \"dataList\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    changeSort(state, action) {\r\n      if (state.column === action.payload) {\r\n        Object.assign(state, {\r\n          column: action.payload,\r\n          dataList: {\r\n            ...state.dataList,\r\n            data: {\r\n              ...state.dataList.data,\r\n              hits: state.dataList.data.hits.slice().reverse(),\r\n            },\r\n          },\r\n          direction:\r\n            state.direction === \"ascending\" ? \"descending\" : \"ascending\",\r\n        });\r\n      } else {\r\n        Object.assign(state, {\r\n          column: action.payload,\r\n          dataList: {\r\n            ...state.dataList,\r\n            data: {\r\n              ...state.dataList.data,\r\n              hits: _.sortBy(state.dataList.data.hits, [action.payload]),\r\n            },\r\n          },\r\n          direction: \"ascending\",\r\n        });\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchDataList.pending, (state, action) => {\r\n      state.error = null;\r\n    });\r\n    builder.addCase(fetchDataList.fulfilled, (state, action) => {\r\n      Object.assign(state, {\r\n        status: \"success\",\r\n        dataList: action.payload,\r\n      });\r\n    });\r\n    builder.addCase(fetchDataList.rejected, (state, action) => {\r\n      state.status = \"rejected\";\r\n      state.error = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { changeSort } = dataListSlice.actions;\r\nexport const dataList = (state) => state.dataList;\r\nexport default dataListSlice.reducer;\r\n","import React from 'react';\r\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts';\r\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Toaster = ({ title, body, type, show,color }) => {\r\n\r\n  setTimeout(() => {\r\n    if (show) {\r\n      toast({\r\n        type: type,\r\n        icon: 'undefined',\r\n        size:'mini',\r\n        title: title,\r\n        description: body,\r\n        time: 5000,\r\n        color:color,\r\n        onDismiss: () => console.log('you have dismissed this toast')\r\n      });\r\n    }\r\n  }, 1000);\r\n\r\n  return (\r\n    <SemanticToastContainer position=\"top-right\" />\r\n  );\r\n};\r\n\r\nToaster.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  body: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Toaster;\r\n","import React, { createContext, useState } from 'react';\r\n\r\nimport Toaster from '../components/Toaster';\r\nimport { Grid } from \"semantic-ui-react\";\r\n\r\nconst ToastContext = createContext();\r\nconst { Provider } = ToastContext;\r\n\r\nconst ToastProvider = ({ children }) => {\r\n\r\n  const [toast, setToast] = useState({});\r\n\r\n  const addToast = (title, message, type,color) => {\r\n    setToast({\r\n      ...toast,\r\n      title: title,\r\n      message:message,\r\n      type:type,\r\n      show:true,\r\n      color:color\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        addToast,\r\n      }}\r\n    >\r\n      <Grid.Row>\r\n        <Grid.Column sm=\"12\" lg=\"6\">\r\n          <Toaster\r\n            title={toast.title}\r\n            body={toast.message}\r\n            type={toast.type}\r\n            show={toast.show}\r\n            color={toast.color}\r\n          />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      {children}\r\n    </Provider >\r\n  );\r\n};\r\n\r\nexport { ToastContext, ToastProvider };\r\n","export default __webpack_public_path__ + \"static/media/spinner.f38bc123.gif\";","import React from 'react';\r\nimport { Container, Grid } from \"semantic-ui-react\";\r\n\r\nconst Page404 = () => (\r\n  <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n    <Container>\r\n      <Grid.Row className=\"justify-content-center\">\r\n        <Grid.Column md=\"6\">\r\n          <div className=\"clearfix\">\r\n            <h1 className=\"float-left display-3 mr-4\">404</h1>\r\n            <h4 className=\"pt-3\">\r\n              Oops! You {'\\''} re lost.\r\n            </h4>\r\n            <p className=\"text-muted float-left\">The page you are looking for was not found.</p>\r\n          </div>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default Page404;\r\n","import React, { createContext, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from './authContext';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\n\r\nconst FetchContext = createContext();\r\nconst { Provider } = FetchContext;\r\n\r\nconst FetchProvider = ({ children }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_SERVER,\r\n  });\r\n\r\n  api.interceptors.request.use(\r\n    (config) => {\r\n      config.headers.Authorization = `Bearer ${authContext.authState.token.token}`;\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    },\r\n  );\r\n\r\n  api.interceptors.response.use(\r\n    (response) => {\r\n      return response;\r\n    },\r\n    (error) => {\r\n      const code = error && error.response ? error.response.status : 0;\r\n      if (code === 401 || code === 403) {\r\n        history.push('/auth/login');\r\n      }\r\n      return Promise.reject(error);\r\n    },\r\n  );\r\n\r\n  const authFetch = api;\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        authFetch,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nconst routWithFetchProvider = withRouter(FetchProvider);\r\n\r\nexport { FetchContext, routWithFetchProvider };\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport \"./scss/style.scss\";\r\nimport { AuthProvider } from \"./context/authContext\";\r\nimport { ToastProvider } from \"./context/toastContext\";\r\nimport { routWithFetchProvider as FetchProvider } from \"./context/fetchContext\";\r\nimport Page404 from \"./views/pages/page404/Page404\";\r\nimport Spinner from \"./assets/images/spinner.gif\";\r\n\r\nconst loading = (\r\n  <div class=\"ui segment\">\r\n    <img class=\"ui centered medium image\" src={Spinner} />\r\n  </div>\r\n);\r\n\r\n// Containers\r\nconst TheLayout = React.lazy(\r\n  async () => await import(\"./containers/TheLayout\")\r\n);\r\n\r\n// Pages\r\nconst Login = React.lazy(() => import(\"./views/pages/login/Login\"));\r\n\r\nconst AppRoutes = () => {\r\n  return (\r\n    <React.Suspense fallback={loading}>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/admin/dashboard\" />\r\n        </Route>\r\n        <Route\r\n          path=\"/admin\"\r\n          name=\"Home\"\r\n          render={(props) => <TheLayout {...props} />}\r\n        />\r\n        <Route\r\n          path=\"/auth/login\"\r\n          name=\"Login Page\"\r\n          render={(props) => <Login {...props} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"*\"\r\n          name=\"404 - Not Found\"\r\n          render={(props) => <Page404 {...props} />}\r\n        />\r\n      </Switch>\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <ToastProvider>\r\n      <Router>\r\n        <AuthProvider>\r\n          <FetchProvider>\r\n            <AppRoutes />\r\n          </FetchProvider>\r\n        </AuthProvider>\r\n      </Router>\r\n    </ToastProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport dataListSlice from './dataList/dataListSlice';\r\nimport systemSlice from './system/systemSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n  dataList: dataListSlice,\r\n  system: systemSlice\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst store = configureStore({\r\n  reducer:rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({serializableCheck: false}).concat(logger),\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n})\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './features/index';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\nserviceWorker.unregister();\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  loading: false,\r\n  error: {},\r\n  smallMenu: false,\r\n  activeMenu: null,\r\n  removeName: \"\",\r\n  selectedMenu: [],\r\n  menuList: [\r\n    { name: \"DashBoard\", to: \"/admin/dashboard\", icon: \"home\" },\r\n    { name: \"Author\", to: \"/admin/list\", icon: \"user\" },\r\n    { name: \"Page\", to: \"/admin/list-Page\", icon: \"home\" },\r\n  ],\r\n  tabs: [\r\n    {\r\n      name: \"DashBoard\",\r\n      path: \"/admin/dashboard\",\r\n      pathname: \"/admin/dashboard\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst systemSlice = createSlice({\r\n  name: \"system\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    toggleMenu: (state = initialState.smallMenu, action) => {\r\n      return { ...state, ...action.payload };\r\n    },\r\n    loadingAction: (state = initialState, { payload }) => {\r\n      return { ...state, loading: payload };\r\n    },\r\n    addToTab: (state = initialState, { payload }) => {\r\n      let tabs = [...state.tabs];\r\n      !tabs.find((tab) => tab.name === payload.name) && tabs.push(payload);\r\n\r\n      let updatedTabs = tabs.map((tab) => {\r\n        if (tab.name === payload.name) {\r\n          return Object.assign({}, tab, { path: payload.path });\r\n        }\r\n        return tab;\r\n      });\r\n      let remainTabs = updatedTabs.filter((t) => state.removeName !== t.name);\r\n      return { ...state, tabs: [...remainTabs] };\r\n    },\r\n    removeTab: (state = initialState, { payload }) => {\r\n      let tabs = [...state.tabs];\r\n      let remainTabs = tabs.filter((t) => t.name !== payload.name);\r\n      return {\r\n        ...state,\r\n        removeName: payload.name,\r\n        tabs:\r\n          remainTabs.length > 0\r\n            ? [...remainTabs]\r\n            : [{ name: \"Dashboard\", path: \"/admin/dashboard\" }],\r\n      };\r\n    },\r\n    clearTab: (state = initialState, { payload }) => {\r\n      return {\r\n        ...state,\r\n        removeName: payload.name,\r\n      };\r\n    },\r\n    activateMenu: (state = initialState, { payload }) => {\r\n      return {\r\n        ...state,\r\n        activeMenu: payload,\r\n      };\r\n    },\r\n  },\r\n  extraReducers: {},\r\n});\r\n\r\nexport const system = (state) => state.system;\r\nexport const {\r\n  toggleMenu,\r\n  loadingAction,\r\n  clearTab,\r\n  removeTab,\r\n  addToTab,\r\n  activateMenu,\r\n} = systemSlice.actions;\r\nexport default systemSlice.reducer;\r\n"],"sourceRoot":""}